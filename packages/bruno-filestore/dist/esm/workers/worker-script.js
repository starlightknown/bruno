"use strict";var e=require("node:worker_threads"),t=require("lodash"),r=require("@usebruno/lang");function s(e){var t=Object.create(null);return e&&Object.keys(e).forEach((function(r){if("default"!==r){var s=Object.getOwnPropertyDescriptor(e,r);Object.defineProperty(t,r,s.get?s:{enumerable:!0,get:function(){return e[r]}})}})),t.default=e,Object.freeze(t)}var a=s(t);const o=[{type:"authorization",sendIn:"headers",source:"oauth2_additional_parameters_auth_req_headers"},{type:"authorization",sendIn:"queryparams",source:"oauth2_additional_parameters_auth_req_queryparams"},{type:"token",sendIn:"headers",source:"oauth2_additional_parameters_access_token_req_headers"},{type:"token",sendIn:"queryparams",source:"oauth2_additional_parameters_access_token_req_queryparams"},{type:"token",sendIn:"body",source:"oauth2_additional_parameters_access_token_req_bodyvalues"},{type:"refresh",sendIn:"headers",source:"oauth2_additional_parameters_refresh_token_req_headers"},{type:"refresh",sendIn:"queryparams",source:"oauth2_additional_parameters_refresh_token_req_queryparams"},{type:"refresh",sendIn:"body",source:"oauth2_additional_parameters_refresh_token_req_bodyvalues"}],n=(e,t)=>e?.length?e.map((e=>({...e,sendIn:t}))):[],u=(e,t,r)=>{if(!((e,t)=>"authorization"===e?"authorization_code"===t||"implicit"===t:"token"!==e&&"refresh"!==e||"implicit"!==t)(t,r))return[];const s=o.filter((e=>e.type===t)),a=[];for(const t of s){const r=e[t.source],s=n(r,t.sendIn);a.push(...s)}return a},g=(e,t=!1)=>{try{const s=t?e:r.bruToJsonV2(e);let o=a.get(s,"meta.type");switch(o){case"http":default:o="http-request";break;case"graphql":o="graphql-request";break;case"grpc":o="grpc-request"}const n=a.get(s,"meta.seq"),g={type:o,name:a.get(s,"meta.name"),seq:a.isNaN(n)?1:Number(n),settings:a.get(s,"settings",{}),tags:a.get(s,"meta.tags",[]),request:{method:"grpc-request"===o?a.get(s,"grpc.method",""):String(a.get(s,"http.method")??"").toUpperCase(),url:a.get(s,"grpc-request"===o?"grpc.url":"http.url"),headers:"grpc-request"===o?a.get(s,"metadata",[]):a.get(s,"headers",[]),auth:a.get(s,"auth",{}),body:a.get(s,"body",{}),script:a.get(s,"script",{}),vars:a.get(s,"vars",{}),assertions:a.get(s,"assertions",[]),tests:a.get(s,"tests",""),docs:a.get(s,"docs","")}};if("grpc-request"===o){const e=a.get(s,"grpc.methodType");e&&(g.request.methodType=e);const t=a.get(s,"grpc.protoPath");t&&(g.request.protoPath=t),g.request.auth.mode=a.get(s,"grpc.auth","none"),g.request.body=a.get(s,"body",{mode:"grpc",grpc:a.get(s,"body.grpc",[{name:"message 1",content:"{}"}])})}else g.request.params=a.get(s,"params",[]),g.request.auth.mode=a.get(s,"http.auth","none"),g.request.body.mode=a.get(s,"http.body","none");const c=s?.auth?.oauth2?.grantType;if(c){const e=(e=>{const t=e.auth.oauth2.grantType,r={};try{const s=["authorization","token","refresh"];for(const a of s){const s=u(e,a,t);s.length>0&&(r[a]=s)}}catch(e){console.error(e),console.error("Error while getting the oauth2 additional parameters!")}return r})(s);Object.keys(e||{}).length>0&&(g.request.auth.oauth2.additionalParameters=e)}return g}catch(e){throw e}};e.parentPort?.on("message",(async t=>{try{const{taskType:s,data:o}=t;let n;if("parse"===s)n=g(o);else{if("stringify"!==s)throw new Error(`Unknown task type: ${s}`);n=(e=>{try{let t=a.get(e,"type");switch(t){case"http-request":default:t="http";break;case"graphql-request":t="graphql";break;case"grpc-request":t="grpc"}const s=a.get(e,"seq"),o={meta:{name:a.get(e,"name"),type:t,seq:a.isNaN(s)?1:Number(s),tags:a.get(e,"tags",[])}};if("http"===t||"graphql"===t)o.http={method:String(a.get(e,"request.method")??"").toLowerCase(),url:a.get(e,"request.url"),auth:a.get(e,"request.auth.mode","none"),body:a.get(e,"request.body.mode","none")},o.params=a.get(e,"request.params",[]),o.body=a.get(e,"request.body",{mode:"json",json:"{}"});else if("grpc"===t){o.grpc={url:a.get(e,"request.url"),auth:a.get(e,"request.auth.mode","none"),body:a.get(e,"request.body.mode","grpc")};const t=a.get(e,"request.method"),r=a.get(e,"request.methodType"),s=a.get(e,"request.protoPath");t&&(o.grpc.method=t),r&&(o.grpc.methodType=r),s&&(o.grpc.protoPath=s),o.body=a.get(e,"request.body",{mode:"grpc",grpc:a.get(e,"request.body.grpc",[{name:"message 1",content:"{}"}])})}return"grpc"===t?o.metadata=a.get(e,"request.headers",[]):o.headers=a.get(e,"request.headers",[]),o.auth=a.get(e,"request.auth",{}),o.script=a.get(e,"request.script",{}),o.vars={req:a.get(e,"request.vars.req",[]),res:a.get(e,"request.vars.res",[])},o.assertions=a.get(e,"request.assertions",[]),o.tests=a.get(e,"request.tests",""),o.settings=a.get(e,"settings",{}),o.docs=a.get(e,"request.docs",""),r.jsonToBruV2(o)}catch(e){throw e}})(o)}e.parentPort?.postMessage(n)}catch(t){console.error("Worker error:",t),e.parentPort?.postMessage({error:t?.message})}}));
//# sourceMappingURL=worker-script.js.map
